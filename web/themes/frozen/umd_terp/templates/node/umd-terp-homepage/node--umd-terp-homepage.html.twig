{#
/**
 * @file
 * Theme override to display a UMD Terp Homepage node.
 */
#}

{%
  set hero_classes = [
    'home-hero',
    node.field_umdt_ct_hero_dark.value ? 'home-hero-dark',
		node.field_umdt_ct_hero_video.value ? 'home-hero-video',
    node.field_umdt_ct_hero_style.value ? node.field_umdt_ct_hero_style.value|clean_class,
  ]
%}

<div {{attributes.addClass(hero_classes)}}>
	{{ title_suffix }}
        {% if content.field_umdt_ct_hero_title|field_value or content.field_umdt_ct_hero_subtitle|field_value or content.field_umdt_ct_hero_text|field_value or content.field_umdt_ct_hero_image|field_value or content.field_umdt_ct_hero_video|field_value %}
	<div class="max-bound">
		{% if content.field_umdt_ct_hero_image|field_value or content.field_umdt_ct_hero_video|field_value%}
            		{% if 'On' in content.field_display_hero_attribution.0 %}
			  <div class="home-hero-media home-hero-media-with-attribution">
			{% else %}
			  <div class="home-hero-media">
			{% endif %}
				<figure class="home-hero-figure">
				{% if content.field_umdt_ct_hero_video|field_value %}
					<video class="lazyload" aria-hidden="true" data-src="{{ file_url(content.field_umdt_ct_hero_video[0]['#media'].field_media_video_file.entity.uri.value) }}" poster="{{ file_url(content.field_umdt_ct_hero_image[0]['#media'].field_media_image.entity.uri.value | image_style('optimized')) }}" autoplay muted loop webkit-playsinline playsinline></video>
					<noscript>
						<video aria-hidden="true" src="{{ file_url(content.field_umdt_ct_hero_video[0]['#media'].field_media_video_file.entity.uri.value) }}" poster="{{ file_url(content.field_umdt_ct_hero_image[0]['#media'].field_media_image.entity.uri.value | image_style('optimized')) }}" autoplay muted loop webkit-playsinline playsinline></video>
					</noscript>
				{% elseif content.field_umdt_ct_hero_image|field_value %}


            {% if 'On' in content.field_display_hero_attribution.0 %}
              {% if node.field_umdt_ct_hero_style.value == 'home-hero-bg' %}
                <button onclick="descriptionToggle()" style="padding: 0%; border: none" class="hero-img-button-wide" id="hero-attrib-button">
              {% else %}
                <button onclick="descriptionToggle()" style="padding: 0%; border: none" class="hero-img-button" id="hero-attrib-button">
              {% endif %}
            {% endif %}
            {% if content.field_umdt_ct_hero_image['#items']|length > 1 %}
              {% set is_fullwidth_list = 'true' %}
            {% endif %}
            <img class="hero-block-container" id="hero-block-fullwidth" src="{{ file_url(content.field_umdt_ct_hero_image[0]['#media'].field_media_image.entity.uri.value | image_style('optimized')) }}" alt="{{ content.field_umdt_ct_hero_image[0]['#media'].field_media_image.alt }}"/>
            {% if 'On' in content.field_display_hero_attribution.0 %}
              </button>
            {% endif %}

				{% endif %}
				  {% if 'On' in content.field_display_hero_attribution.0 %}
				  	  <figcaption id="hero-caption" class="home-hero-cpation click-instruction">
						  <span class="caption-visibility" id="hero-caption-content">
						    {{ content.field_umdt_ct_hero_image[0]['#media'].field_image_attribution.value|raw }}
						  </span>
					  </figcaption>
					  <script>
    						function descriptionToggle() {
      							let elements = document.getElementsByClassName("caption-visibility");
      							let caption = document.getElementById("hero-caption");

      							for (let i = 0; i < elements.length; i++) {
        						  if (elements[i].style.display === "none" || elements[i].style.display === "") {
          						    elements[i].style.display = "block";
          						    caption.classList.remove("click-instruction");
        						  } else {
          						    elements[i].style.display = "none";
          						    caption.classList.add("click-instruction");
        						  }
      							}
    						}
					</script>
				  {% endif %}
				</figure>
			</div>
		{% endif %}
		<div class="home-hero-content">
			<div class="outer-pad">
				<div class="editor-content">
					{% if content.field_umdt_ct_hero_title|field_value %}
						<h1>{{ content.field_umdt_ct_hero_title|field_value }}</h1>
					{% endif %}
					{% if content.field_umdt_ct_hero_subtitle|field_value %}
						<h2>{{ content.field_umdt_ct_hero_subtitle|field_value }}</h2>
					{% endif %}
					{% if content.field_umdt_ct_hero_text|field_value %}
						<p>{{ content.field_umdt_ct_hero_text|field_value }}</p>
					{% endif %}
					{% if content.field_umdt_ct_hero_cta.0 %}
						<p>{% include directory ~ '/templates/helpers/link.html.twig' with {'link': content.field_umdt_ct_hero_cta.0, 'classes': 'btn btn-primary' } %}</p>
					{% endif %}
				</div>
			</div>
		</div>
	</div>
        {% endif %}
</div>
{{ content|without('field_umdt_ct_hero_video', 'field_umdt_ct_hero_dark', 'field_umdt_ct_hero_style', 'field_umdt_ct_hero_image', 'field_umdt_ct_hero_title', 'field_umdt_ct_hero_subtitle', 'field_umdt_ct_hero_text', 'field_umdt_ct_hero_cta', 'field_hero_attribution', 'field_display_hero_attribution') }}

{% if is_fullwidth_list is not empty %}
  <script>
    const imageUrls = [
      {% for item in content.field_umdt_ct_hero_image %}
        {% set furl = file_url(item['#media'].field_media_image.entity.uri.value | image_style('optimized')) %}
        {% if item['#media'].field_image_attribution.value %}
          {% set fattrib = item['#media'].field_image_attribution.value|raw %}
          {% set fattrib_encode = fattrib|base64_encode %}
        {% else %}
          {% set fattrib_encode = "" %}
        {% endif %}
        {% if furl is not empty %}
          {{ '{' }}
            url: "{{ furl }}",
            description: "{{ fattrib_encode }}"
          {{ '},' }}
        {% endif %}
      {% endfor %}
    ];

    function changeHeroBackground() {
      const imgs = imageUrls.filter((obj) => obj.url);
      let hero_image = document.getElementById("hero-block-fullwidth");
      let hero_caption_content = document.getElementById("hero-caption-content");
      let hero_caption = document.getElementById("hero-caption");
      let hero_button = document.getElementById("hero-attrib-button");

      let randomIndex = Math.floor(
        Math.random() * imgs.length
      );
      let randomImageUrl = imgs[randomIndex];

      hero_image.src = randomImageUrl.url;
      if (randomImageUrl.description != "") {
        hero_caption_content.innerHTML = atob(randomImageUrl.description);
      } else {
        hero_caption.classList.add("hidden");
        hero_button.disabled = true;
      }
    }

    if (imageUrls.length > 0) {
      changeHeroBackground();
    }
  </script>
{% endif %}
